// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Parking.Server.Infrastructure.Models;

namespace Parking.Server.Infrastructure.Migrations
{
    [DbContext(typeof(ParkingIntegratedControlCenterContext))]
    partial class ParkingIntegratedControlCenterContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Parking.Server.Infrastructure.Models.ActionLog", b =>
                {
                    b.Property<int>("LogSeq")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AreaName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("Controller")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("HttpStatus")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Ipaddr")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Parameter")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<DateTime?>("RegDt")
                        .HasColumnName("RegDT")
                        .HasColumnType("datetime");

                    b.Property<string>("ServerName")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("UserId")
                        .HasColumnName("UserID")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("LogSeq");

                    b.ToTable("ActionLogs");
                });

            modelBuilder.Entity("Parking.Server.Infrastructure.Models.SPCodeList", b =>
                {
                    b.Property<string>("CD_CD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CD_IDX")
                        .HasColumnType("int");

                    b.Property<string>("CD_NM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CD_USE_YN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CM_CD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("rowNo")
                        .HasColumnType("bigint");

                    b.ToTable("SPCodeList");
                });

            modelBuilder.Entity("Parking.Server.Infrastructure.Models.TCode", b =>
                {
                    b.Property<int>("CdIdx")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CD_IDX")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CdCd")
                        .HasColumnName("CD_CD")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("CdNm")
                        .HasColumnName("CD_NM")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("CdUseYn")
                        .IsRequired()
                        .HasColumnName("CD_USE_YN")
                        .HasColumnType("char(1)")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("CmCd")
                        .HasColumnName("CM_CD")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("DisplayOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("displayOrder")
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("CdIdx");

                    b.ToTable("T_CODE");
                });

            modelBuilder.Entity("Parking.Server.Infrastructure.Models.TCodeMaster", b =>
                {
                    b.Property<string>("CmCd")
                        .HasColumnName("CM_CD")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("CmNm")
                        .HasColumnName("CM_NM")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("CmUseYn")
                        .IsRequired()
                        .HasColumnName("CM_USE_YN")
                        .HasColumnType("char(1)")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("FNm")
                        .HasColumnName("F_NM")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("TNm")
                        .HasColumnName("T_NM")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("CmCd");

                    b.ToTable("T_CODE_MASTER");
                });

            modelBuilder.Entity("Parking.Server.Infrastructure.Models.TSiteConfig", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnName("key")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddDescription")
                        .HasColumnName("addDescription")
                        .HasColumnType("text");

                    b.Property<string>("AddValue1")
                        .HasColumnName("addValue1")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("AddValue2")
                        .HasColumnName("addValue2")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Controller")
                        .HasColumnName("controller")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Decription")
                        .HasColumnName("decription")
                        .HasColumnType("text");

                    b.Property<DateTime>("Moddt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("moddt")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<DateTime>("Regdt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("regdt")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<string>("Site")
                        .HasColumnName("site")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool?>("Useyn")
                        .HasColumnName("useyn")
                        .HasColumnType("bit");

                    b.Property<string>("Value")
                        .HasColumnName("value")
                        .HasColumnType("text");

                    b.HasKey("Key");

                    b.ToTable("T_SiteConfig");
                });
#pragma warning restore 612, 618
        }
    }
}
